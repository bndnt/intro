//Умовний рендеринг
//Умовний рендеринг
//Умовний рендеринг
//Умовний рендеринг

// Умовний рендеринг в React - це механізм, який дозволяє відображати різний контент або компоненти на основі умови. Це часто використовується для динамічної зміни відображення компонентів в залежності від різних обставин, наприклад, значень пропсів.

// Оператор &&

// Логічний оператор && використовується для рендера розмітки лише у випадку, якщо умова виконується, тобто приводиться до true.

// умова && розмітка
// Зліва ставиться умова рендеру, справа JSX розмітка, що буде відображена якщо умова зліва наближається до true. В іншому випадку результатом виразу буде false - значення, яке не рендериться.

// Якщо за умови нічого не повинно бути відрендерено, можна повернути null, undefined або false. Ці значення не будуть відображені.

// У JSX вираз обгортається в {}, щоб відобразити його результат.

// Будемо рендерити повідомлення про непрочитані листи лише в разі, якщо масив повідомлень не є порожнім, тобто його довжина більше нуля.

// export default function Mailbox({ username, messages }) {
//   return (
//     <div>
//       <p>Hello {username}</p>
//       {messages.length > 0 && <p>You have {messages.length} unread messages</p>}
//     </div>
//   );
// }

// Тернарний оператор

// Використовується, якщо в результаті перевірки умови потрібно відобразити різну розмітку.

// умова ? вміст_якщо_умова_true : вміст_якщо_умова_false
// У JSX вираз обгортається в {}, щоб відобразити його результат.

// <div>
// 	{умова ? вміст_якщо_умова_true : вміст_якщо_умова_false}
// </div>

// const Mailbox = ({ name, unreadMessages }) => {
//   return (
//     <div>
//       <p>Hello {name}</p>
//       <p>
//         {unreadMessages.length > 0
//           ? `You have ${unreadMessages.length} unread messages`
//           : "No unread messages"}
//       </p>
//     </div>
//   );
// };

// У випадку, коли за умови потрібно відобразити різну розмітку, ми робимо те саме, але результатом виразу є JSX.
// const Mailbox = ({ username, messages }) => {
//   return (
//     <div>
//       <p>Hello {username}</p>
//       {messages.length > 0 ? (
//         <div>
//           <p>You have {messages.length} unread messages</p>
//           <MessageList messages={messages} />
//         </div>
//       ) : (
//         <div>
//           <p>No messages</p>
//         </div>
//       )}
//     </div>
//   );
// };
